const TelegramBot = require('node-telegram-bot-api')
const kb = require('./keyboard-buttons')
const keyboard = require('./keyboard')
const helper = require('./helper')
const sessionAkk = require('./sessionAkk')
const sessionAkkReaction = require('./sessionAkkReaction')
const http = require('http')
const url = require('url')
const { exec } = require("child_process");


const mysql = require("mysql2/promise");
const config = require('./config')

const freekassa = require("freekassa-node");
const QiwiBillPaymentsAPI = require('@qiwi/bill-payments-node-js-sdk');
const SECRET_KEY = 'eyJ2ZXJzaW9uIjoiUDJQIiwiZGF0YSI6eyJwYXlpbl9tZXJjaGFudF9zaXRlX3VpZCI6InhheXExbS0wMCIsInVzZXJfaWQiOiI3OTUzMjIzNjY1OCIsInNlY3JldCI6ImE1NTJmMWQwMzM5Zjc4ZWM0NjdjNDVkNTI5YWE5NzQ0ZWI2ZmI2Mzc4MThkNDI3NjU4MTcxN2I1YzAwNDUxODQifX0=';
const qiwiApi = new QiwiBillPaymentsAPI(SECRET_KEY);

const { Api, TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const input = require("input"); // npm i input

const apiId = 13546883;
const apiHash = "717b67ceb0ab2a1aa7fc9f858969e15f";

const stringSession = new StringSession("1AgAOMTQ5LjE1NC4xNjcuNDEBu3lZ+EJXuzE1rw7ctYWlpwIsv17I6vvW1ifcMgfhZgAeUi15rph2q8WfIKINhmV83M2NutTCdphfu34kwcmck1MIt/gqz/FzwJa5k6beeQzqtod6uWApkUtekD5gQi5MTbTpvlgg0RDDd+J3Xgm/emz6sKWD+VBeOD9XNfEDfQHQOG1ZZVKhMR+eYx14X3gFUFYozMdO9r3gfQZfBq/aJ+dzAQfpZa69yda0KadPnVCHIx+1r8fGKkjZyrcEDxwC0AxjmH/lDZnMy86oKkephqj3nl0dU6bUU5nS16x2sTC6KWzmnET9N2eAgsnXYzaDiqr9RE1iiIxinKQsLJ12Q4I="); // fill this later with the value from session.save()
const clientApi = new TelegramClient( stringSession, apiId, apiHash, {
    connectionRetries: 5,
    
  });

(async () => {
  console.log("Loading interactive example...");
 
  await clientApi.start({
    phoneNumber: async () => await input.text("Please enter your number: "),
    password: async () => await input.text("Please enter your password: "),
    phoneCode: async () =>
      await input.text("Please enter the code you received: "),
    onError: (err) => console.log(err),
  });
  console.log("You should now be connected.");
  console.log(clientApi.session.save());
  await clientApi.sendMessage("me", { message: "Hello!" });

})();



const {google} = require('googleapis')
const keys = require('./credentials.json');
const { chat } = require('googleapis/build/src/apis/chat');

const express = require('express');
const { getRandomInt, generateRandomBigInt } = require('telegram/Helpers');
const app = express()
const setup = {port:8000}


// –°–ª—É—à–∞–µ–º –ø–æ—Ä—Ç –∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ —Å–æ–æ–±—â–∞–µ–º
app.listen(setup.port, () => {
  console.log('–°–µ—Ä–≤–µ—Ä: –ø–æ—Ä—Ç %s - —Å—Ç–∞—Ä—Ç!', setup.port);
});
const bodyParser = require('body-parser')
const { getUpdates } = require('telegram-test-api/lib/routes/client/getUpdates')
const { error } = require('console')
const { resolve } = require('path')
app.use(bodyParser.urlencoded({
    extended: true,
}))
app.use(bodyParser.json())

app.get('/', function (req, res) {
  res.send('Hello World')

})
app.get('/good', function (req, res) {
    res.send('–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ')
  
  })
app.get('/bad', function (req, res) {
    res.send('–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞!')
  
  })    
  app.get('/shop-verification-nrmdP6emVL.txt', function (req, res) {
    res.send('shop-verification-nrmdP6emVL')
  
  })    
 
app.listen(process.env.PORT)
//process.env.PORT

helper.logStart()
//pm2 start index.js --deep-monitoring --attach
const TOKEN = "5169973391:AAH2-yK4i1T9xc-aWXvBA1pfEvu2weLK48U"
const bot = new TelegramBot(TOKEN, {polling:true})
let test = 2
let numberIndex = 0
let summ = 0
let time = 0
let verh = 0
let vniz = 0

 

app.post('/apicassa', function (req, res) {
    console.log(req.body)
    async function cassa(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute(`select * from users WHERE randomid = ${req.body.MERCHANT_ORDER_ID}`)

        let oneBalance = ''
        let oneId = ''

        rows.map(e =>{
            
            oneBalance = e.balance
            oneId = e.id
            
        })  

        await connMysql.execute(`UPDATE users SET balance=${Number(oneBalance)+Number(req.body.AMOUNT)} WHERE id = '${oneId}'`)
        await connMysql.execute(`UPDATE users SET randomid=0 WHERE id = '${oneId}'`)
       
        bot.sendMessage(oneId,`–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${Number(req.body.AMOUNT)}—Ä.`)
        bot.sendMessage('@kapustaBablo',`‚úÖ–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${Number(req.body.AMOUNT)}—Ä. FREECASSA‚úÖ`)

       
        connMysql.end()
    }

    cassa()

})

app.post('/api', function (req, res) {
    console.log(req.body)
    async function apiq(){
        const connMysql = await mysql.createConnection(config) 
        const [rows] = await connMysql.execute(`select * from users WHERE randomid = ${Number(req.body.bill.billId)}`)

        let oneBalance = ''
        let oneId = ''
        let referal = ''
        let refBalance =''
        
        rows.map(e =>{
            
            oneBalance = e.balance
            oneId = e.id
            referal = e.brat
        })  

        const [refer] = await connMysql.execute(`select * from users WHERE id = '${referal}'`)

        refer.map(e =>{
            refBalance = e.hz
        })  

        console.log(oneId)

        if(req.body.bill.status.value === 'PAID' && oneId != ''){
       

        await connMysql.execute(`UPDATE users SET balance=${Number(oneBalance)+Number(req.body.bill.amount.value)} WHERE id = '${oneId}'`)

        await connMysql.execute(`UPDATE users SET randomid=0 WHERE id = '${oneId}'`)
       
        bot.sendMessage(oneId,`–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${Number(req.body.bill.amount.value)}—Ä.`)
        bot.sendMessage('@kapustaBablo',`‚úÖ–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${Number(req.body.bill.amount.value)}—Ä.`)
       
        if(referal != ''){
            await connMysql.execute(`UPDATE users SET hz=${Math.floor(Number(refBalance)+(Number(req.body.bill.amount.value))*0.2)} WHERE id = '${referal}'`)    
            bot.sendMessage(referal,`–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${Math.floor((Number(req.body.bill.amount.value))*0.2)}—Ä.`)
        } 

        }else{
            console.log('errorssss')
        }
       
         connMysql.end()
    }

    apiq()

        
  })



bot.on('message', msg => {
  
    const chatId = helper.getChatId(msg)
   
   

    async function status(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let oneStatus = ''
        let oneBalance = ''
        let oneTarif = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id 
                oneStatus = e.status
                oneBalance = Number(e.balance)
                oneTarif = e.tarif
            }
        })  

      
        let usersId  = []

        const result = await clientApi.invoke(new Api.channels.GetParticipants({
            channel: 'glazaVtelege',
            filter: new Api.ChannelParticipantsMentions({}),
            offset: 0,
            limit: 10000,
            hash: BigInt('-4156887774564')
        
            }));
    
      
          result.users.map(e => {
            usersId.push(parseInt(e.id))
        })    
       
        if(oneId===''){
            bot.sendMessage(chatId,`–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start`)
        } else if(!usersId.includes(chatId)){
            bot.sendMessage(chatId,`‚ùóÔ∏è <b>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> ‚ùóÔ∏è\n–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª @glazaVtelege\n\n<i>–í —Å–ª—É—á–∞–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞, –Ω–∞ –∫–∞–Ω–∞–ª–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞</i>`,{parse_mode: 'HTML' })
        }else{

        if(msg.forward_from_chat && oneStatus==='–ù–∞–∫—Ä—É—Ç–∫–∞' && msg.media_group_id === undefined){
            let idChannel = String(msg.forward_from_chat.id).substring(4)

            
            async function zakazilo() { 
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001632245000",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001632245000",
                        })
                );
               
                const result0 = await clientApi.invoke(
                    new Api.messages.SendMessage({
                        peer: "telemnogocombot",
                        message: "üîö –î–æ–º–æ–π",
                        randomId: generateRandomBigInt(1,100000),
                        noWebpage: true,
                        scheduleDate: 43,
                    })
                    );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001632245000",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );
            } 
                async function runss() {         
                                                
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001769608495",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001769608495",
                        })
                );
               
                const result0 = await clientApi.invoke(
                    new Api.messages.SendMessage({
                        peer: "telemnogocombot",
                        message: "üîö –î–æ–º–æ–π",
                        randomId: generateRandomBigInt(1,100000),
                        noWebpage: true,
                        scheduleDate: 43,
                    })
                    );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001769608495",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );
                    
            };

            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
           
            await connMysql.execute(`INSERT INTO views(name,idUser,idChannel,numberZakaz) VALUES('${msg.forward_from_chat.title}',${msg.chat.id},${idChannel},${billid})`)
            
            await bot.forwardMessage((Number(idChannel)===1735748885||Number(idChannel)===1557490766 ||Number(idChannel)===1786540189||Number(idChannel)===1660144286)?'-1001632245000':'-1001769608495',chatId, msg.message_id).then(function(){}) 
    
            await (Number(idChannel)===1735748885||Number(idChannel)===1557490766||Number(idChannel)===1786540189||Number(idChannel)===1660144286)?zakazilo():runss()
                   
            await connMysql.execute(`UPDATE users SET status="–ß–∏—Å–ª–æ –Ω–∞–∫—Ä—É—Ç–∫–∏" WHERE id = ${oneId}`)

            await bot.sendMessage(chatId,`üëÅ‚Äçüó® –í–≤–µ–¥–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n\nüíØ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –æ–¥–∏–Ω –ø–æ—Å—Ç <b>10 000</b>\n\nüí¨ <i>–ü—Ä–∏–º–µ—Ä: –Ω–∞ –ø–æ—Å—Ç–µ 1000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –Ω–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –±—ã–ª–æ 3000. –¢–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 2000.</i>`,{parse_mode: 'HTML' })
            
         
        } else 
        if(msg.forward_from_chat && oneStatus==='–ù–∞–∫—Ä—É—Ç–∫–∞' && msg.media_group_id !== undefined){
            bot.sendMessage(chatId,`‚ö†Ô∏è –ï—Å–ª–∏ –≤ –ø–æ—Å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ (–∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–ª–∏ –≤–∏–¥–µ–æ), –≤ –±–æ—Ç–∞ –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–µ—Ä–≤—É—é –∏–∑ –Ω–∏—Ö (–ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –∏–ª–∏ –¥–ª–∏–Ω–Ω—ã–π —Ç–∞–ø –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ñ–∞–π–ª—É –∏ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å)`,{parse_mode: 'HTML' })
        }

        if(oneStatus==='–ß–∏—Å–ª–æ –Ω–∞–∫—Ä—É—Ç–∫–∏'&& Number(msg.text)<=10000){
            const connMysql = await mysql.createConnection(config) 
        
            const [rows] = await connMysql.execute('select * from views')
            
            let oneNumber = ''
            let idChnl = ''
            rows.slice(-1).map(e =>{
                
                oneNumber = e.numberZakaz
                idChnl = Number(e.idChannel)
                
            })  
            async function chislo(){
              

                await bot.sendMessage(chatId,`‚è± –ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ä–∞—Å—Ç—è–Ω—É—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–∞ 1 –ø–æ—Å—Ç?\n\nüëâ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∏–ª–∏ 0, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å:`)
                await connMysql.execute(`UPDATE views SET count=${Number(msg.text)} WHERE numberZakaz = ${oneNumber}`)
                await connMysql.execute(`UPDATE users SET status="–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏" WHERE id = ${oneId}`)

                await connMysql.end()
            }
            chislo()

          
            await bot.sendMessage((idChnl===1735748885||idChnl===1557490766||idChnl===1786540189||idChnl===1660144286)?'-1001632245000':'-1001769608495', `${msg.text}`)
        
            async function zakazos() {
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001632245000",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001632245000",
                        })
                );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001632245000",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );

            };
            
          async function runsos() {
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001769608495",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001769608495",
                        })
                );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001769608495",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );

            };
            (idChnl===1557490766||idChnl===1735748885||idChnl===1786540189||idChnl===1660144286)?zakazos():runsos()
        }
        if(oneStatus==='–ß–∏—Å–ª–æ –Ω–∞–∫—Ä—É—Ç–∫–∏'&& Number(msg.text)>10000){
            bot.sendMessage(chatId,`‚ö†Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 10 000`)
        }
   
        if(oneStatus==='–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏'&& (Number(msg.text)||msg.text==='0')){
            const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from views')
                
                let oneNumber = ''
                let idChnl = ''
                rows.slice(-1).map(e =>{
                    
                    oneNumber = e.numberZakaz
                    idChnl = Number(e.idChannel)
                })  
            async function times(){
                
                await bot.sendMessage(chatId,`‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
                await connMysql.execute(`UPDATE views SET time=${Number(msg.text)} WHERE numberZakaz = '${oneNumber}'`)
                await connMysql.execute(`UPDATE users SET status="–ù–∞–∫—Ä—É—Ç–∫–∞" WHERE id = ${oneId}`)
                
                await connMysql.end()
            }
            times()
            
            await bot.sendMessage((idChnl===1557490766||idChnl===1735748885||idChnl===1786540189||idChnl===1660144286)?'-1001632245000':'-1001769608495', `${msg.text}`)
        
            async function zakazTime() {
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001632245000",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001632245000",
                        })
                );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001632245000",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );

            };
            async function runss() {
                const watchpost = await clientApi.invoke(
                    new Api.channels.ReadHistory({
                        channel: "-1001769608495",
                        maxId: 0,
                    })
                    );
                const idPosts =  await clientApi.invoke(
                    new Api.channels.GetFullChannel({
                        channel: "-1001769608495",
                        })
                );
                const result = await clientApi.invoke(
                new Api.messages.ForwardMessages({
                    fromPeer: "-1001769608495",
                    id: [idPosts.fullChat.readInboxMaxId],
                    randomId: [generateRandomBigInt(1,100000)],
                    toPeer: "telemnogocombot",
                    withMyScore: true,
                    scheduleDate: 43,
                })
                );

            };
            (idChnl===1557490766||idChnl===1735748885||idChnl===1786540189||idChnl===1660144286)?zakazTime():runss()
        }

        
        if(oneStatus==='–ü–æ–¥–ø–∏—Å—á–∏–∫–∏'&& (msg.text.includes('https')||msg.text.includes('t.me')||msg.text.includes('http')||msg.text.includes('@'))){
            
            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
          
            await connMysql.execute(`UPDATE users SET status="–ß–∏—Å–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤" WHERE id = ${oneId}`)
            await connMysql.execute(`INSERT INTO views(name,idUser,numberZakaz) VALUES('${msg.text}',${msg.chat.id},${billid})`)

            bot.sendMessage('@zakazSudo', `–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ —Å—é–¥–∞ –ë–´–°–¢–†–´–ï ${msg.text}`)

            bot.sendMessage(chatId,`üë• –í–≤–µ–¥–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:\n\n –ë–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–∫—Ä—É—Ç–∏—Ç—å <b>${Math.floor(oneBalance/0.5)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</b>`,{parse_mode: 'HTML' })
            
        }
       
      
        if(oneStatus==='–ß–∏—Å–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤'&& Number(msg.text)){
            
            if(oneBalance >= Number(msg.text)*0.5){
                
                await connMysql.execute(`UPDATE users SET balance=${oneBalance-Number(msg.text)*0.5} WHERE id = ${oneId}`)
           
                async function countpdp(){
                    const connMysql = await mysql.createConnection(config) 
            
                    const [rows] = await connMysql.execute('select * from views')
                    
                    let oneNumber = ''
                    
                    rows.slice(-1).map(e =>{
                        
                        oneNumber = e.numberZakaz
                        
                    })  

                    await bot.sendMessage(chatId,`‚è± –ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ä–∞—Å—Ç—è–Ω—É—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞?\n\nüëâ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∏–ª–∏ 0, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å:`)
                    await connMysql.execute(`UPDATE views SET count=${Number(msg.text)} WHERE numberZakaz = ${oneNumber}`)
                    await connMysql.execute(`UPDATE users SET status="–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø–¥–ø" WHERE id = ${oneId}`)

                    await connMysql.end()
                }
                countpdp()

            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ë–´–°–¢–†–´–ï: ${msg.text}`)
          } else if(oneBalance < Number(msg.text)*0.5){
            bot.sendMessage(chatId,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
          }
        }

        if(oneStatus==='–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø–¥–ø'&& (Number(msg.text)||msg.text==='0')){
 
            async function timespdp(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from views')
                
                let oneNumber = ''
                
                rows.slice(-1).map(e =>{
                    
                    oneNumber = e.numberZakaz
                    
                })  
                await bot.sendMessage(chatId,`‚úÖ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
                await connMysql.execute(`UPDATE views SET time=${Number(msg.text)} WHERE numberZakaz = ${oneNumber}`)
                await connMysql.execute(`UPDATE users SET status="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏" WHERE id = ${oneId}`)
                bot.sendMessage('@zakazSudo', `–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ë–´–°–¢–†–´–ï: –Ω–∞ ${msg.text} —á–∞—Å–∞ ‚úÖ`)

                await connMysql.end()
            }
            timespdp()
        }

        if(oneStatus==='–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –º–µ–¥–ª–µ–Ω–Ω—ã–µ'&& (msg.text.includes('https')||msg.text.includes('t.me')||msg.text.includes('http')||msg.text.includes('@'))){


            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
          
            await connMysql.execute(`UPDATE users SET status="–ß–∏—Å–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–µ–¥–ª–µ–Ω–Ω–æ" WHERE id = ${oneId}`)
            await connMysql.execute(`INSERT INTO views(name,idUser,numberZakaz) VALUES('${msg.text}',${msg.chat.id},${billid})`)

            bot.sendMessage('@zakazSudo', `–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ —Å—é–¥–∞ –ú–ï–î–õ–ï–ù–ù–û ${msg.text}`)

            bot.sendMessage(chatId,`üë• –í–≤–µ–¥–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:\n\n –ë–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–∫—Ä—É—Ç–∏—Ç—å <b>${Math.floor(oneBalance/0.05)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</b>`,{parse_mode: 'HTML' })
        }

        if(oneStatus==='–ß–∏—Å–ª–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –º–µ–¥–ª–µ–Ω–Ω–æ'&& Number(msg.text)){
            
            if(oneBalance >= Number(msg.text)*0.05){
                
                await connMysql.execute(`UPDATE users SET balance=${oneBalance-Number(msg.text)*0.05} WHERE id = ${oneId}`)
           
                async function countpdp(){
                    const connMysql = await mysql.createConnection(config) 
            
                    const [rows] = await connMysql.execute('select * from views')
                    
                    let oneNumber = ''
                    
                    rows.slice(-1).map(e =>{
                        
                        oneNumber = e.numberZakaz
                        
                    })  

                    await bot.sendMessage(chatId,`‚è± –ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ä–∞—Å—Ç—è–Ω—É—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞?\n\nüëâ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∏–ª–∏ 0, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å:`)
                    await connMysql.execute(`UPDATE views SET count=${Number(msg.text)} WHERE numberZakaz = ${oneNumber}`)
                    await connMysql.execute(`UPDATE users SET status="–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø–¥–ø –º–µ–¥" WHERE id = ${oneId}`)
                 
                    await connMysql.end()
                }
                countpdp()

            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ú–ï–î–õ–ï–ù–ù–û: ${msg.text}`)
          } else if(oneBalance < Number(msg.text)*0.05){
            bot.sendMessage(chatId,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
          }
        }

        if(oneStatus==='–í—Ä–µ–º—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø–¥–ø –º–µ–¥'&& (Number(msg.text)||msg.text==='0')){
 
            async function timespdpmed(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from views')
                
                let oneNumber = ''
                
                rows.slice(-1).map(e =>{
                    
                    oneNumber = e.numberZakaz
                    
                })  
                await bot.sendMessage(chatId,`‚úÖ –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
                await connMysql.execute(`UPDATE views SET time=${Number(msg.text)} WHERE numberZakaz = ${oneNumber}`)
                await connMysql.execute(`UPDATE users SET status="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –º–µ–¥–µ–ª–µ–Ω–Ω–æ" WHERE id = ${oneId}`)
                bot.sendMessage('@zakazSudo', `–†–∞—Å—Ç—è–Ω—É—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ú–ï–î–õ–ï–ù–ù–û: –Ω–∞ ${msg.text} —á–∞—Å–∞ ‚úÖ`)

                await connMysql.end()
            }
            timespdpmed()
        }

        
        if(oneStatus==='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Qiwi'&& Number(msg.text)){
          
            if(oneBalance >= Number(msg.text)*150){
             
            await connMysql.execute(`UPDATE users SET balance=${oneBalance-Number(msg.text)*150} WHERE id = ${oneId}`)
            await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${oneId}`)
              
               
            bot.sendMessage('@zakazSudo', `ü•ùQIWIü•ù\n${chatId} \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ QIWI: ${msg.text}`,{parse_mode:'HTML'})
            bot.sendMessage(chatId,`‚è≥<b>–í–∞—à–∞ –ø–æ–∫—É–ø–∫–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è</b>‚è≥\n\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 10 –º–∏–Ω—É—Ç.\n<b>Qiwi –∫–æ—à–µ–ª–µ–∫</b> –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —ç—Ç–æ—Ç —á–∞—Ç.\n\n<i>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @glazaAdmin </i>`,{parse_mode:'HTML'})
        }else if(oneBalance < Number(msg.text)*150){
            bot.sendMessage(chatId,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
          }
        }

        if(oneStatus==='–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞'&& Number(msg.text)){

            await connMysql.execute(`UPDATE qiwi SET idUser=${Number(msg.text)} WHERE id = 1`)
            await connMysql.execute(`UPDATE users SET status="–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç" WHERE id = ${oneId}`)
           
            bot.sendMessage(chatId,`Id –∑–∞–ø–∏—Å–∞–Ω`)
        }
        if(oneStatus==='–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç'&& msg.text){

            async function zakaz(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from qiwi')
                
                let oneNumber = ''
                
                rows.map(e =>{
                    
                    oneNumber = e.idUser
                    
                })  
                bot.sendMessage(oneNumber,`${msg.text}`)
                bot.sendMessage(chatId,`‚úâÔ∏è–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ‚úâÔ∏è`)
                await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${oneId}`)
           
                await connMysql.end()
            }
            zakaz()
        }

        if(oneStatus==='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏' && msg.text.includes('https')){

            let linkchat =  msg.text.substring(13)
            let indx =  linkchat.indexOf('/');
            let newlink = linkchat.slice(0,indx)
            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
          
            await connMysql.execute(`INSERT INTO coment(idUser,chat,link,post,numberZakaz) VALUES(${msg.chat.id},'${msg.text}','${newlink}','${linkchat.substring(indx+1)}',${billid})`)
            await connMysql.execute(`UPDATE users SET status="–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤" WHERE id = ${oneId}`)
            
            bot.sendMessage(chatId,`üìÉ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é ','\n‚ùóÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 2 —à—Ç.\n\n<i>–ü—Ä–∏–º–µ—Ä: –í—Å–µ–º –ø—Ä–∏–≤–µ—Ç,–û—Ç–ª–∏—á–Ω–æ,–ö–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞?,–∏ —Ç–∞–∫ –¥–∞–ª–µ–µ</i>`,{parse_mode:'HTML'})
        }
    
            if(oneStatus==='–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤' && msg.text.includes(',')){
                
                async function textComentt(){
                    const connMysql = await mysql.createConnection(config) 
            
                    const [rows] = await connMysql.execute('select * from coment')
                    
                    let oneNumber = ''
                    let oneLink = ''
                    rows.slice(-1).map(e =>{
                        
                        oneNumber = e.numberZakaz
                        oneLink = e.link
                    })  
                    await connMysql.execute(`UPDATE users SET status="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–∞" WHERE id = ${oneId}`)
                    await connMysql.execute(`UPDATE coment SET text='${msg.text}' WHERE numberZakaz = ${oneNumber}`)
 
                    const [rowses] = await connMysql.execute('select * from coment')
                   
                    rowses.slice(-1).map(e =>{
                        if(Number(e.idUser) === chatId){   
                    
                            bot.sendMessage(chatId,`üìå <b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: ${e.chat}\n‚ùóÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${e.text.split(',').length}—à—Ç.\nüìù –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: <b>${e.text}</b>\nüíµ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±–ª–µ–π):  ${e.text.split(',').length * 0.5}</b>`,{
                               reply_markup:{
                               inline_keyboard:  [
                                   [    {
                                           text:'üí∞ –û–ø–ª–∞—Ç–∏—Ç—å',
                                           callback_data:'oplataKoment',
                                           
                                          
                                       }
                                   ]]
                            },parse_mode: 'HTML'})
                            bot.sendMessage('-1001769608495',`üìå <b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: ${e.chat}\n‚ùóÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${e.text.split(',').length}—à—Ç.\nüìù –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: <b>${e.text}</b>\nüíµ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±–ª–µ–π):  ${e.text.split(',').length * 0.5}</b>`,{parse_mode: 'HTML'})
                       } 
                        
                        
                    })  


                    await connMysql.end()
                }
                textComentt()

        }else if(oneStatus==='–¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤' && !msg.text.includes(',')&&!msg.text.includes('üîô –ù–∞–∑–∞–¥')){
            bot.sendMessage(chatId,`–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–∏–º–µ—Ä: `)
        }
        
            
        if(oneStatus==='–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã'&& (msg.text.includes('https')||msg.text.includes('t.me')||msg.text.includes('http')||msg.text.includes('@'))){

            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
          
            await connMysql.execute(`INSERT INTO avto(idUser,channel,numberZakaz) VALUES(${msg.chat.id},'${(msg.text.includes('@')?`http://t.me/${msg.text}`:msg.text.includes('http')?`${msg.text}`:msg.text.includes('https')?`${msg.text}`:msg.text.includes('t.me')?`${msg.text}`:`${msg.text}`)}',${billid})`)

            await connMysql.execute(`UPDATE users SET status="–ß–∏—Å–ª–æ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤" WHERE id = ${oneId}`)  

            bot.sendMessage('@zakazSudo', `üëÅ‚Äçüó® –ê–í–¢–û–ü–†–û–°–ú–û–¢–†–´ üëÅ‚Äçüó® ${msg.text}`)

            bot.sendMessage(chatId,`üëÅ‚Äçüó® –í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –æ–¥–∏–Ω –ø–æ—Å—Ç:`,{parse_mode: 'HTML' })
        }
       
    
        if(oneStatus==='–ß–∏—Å–ª–æ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'&& Number(msg.text)){

            async function chisloAvto(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from avto')
                
                let oneNumber = ''
                
                rows.slice(-1).map(e =>{
                    
                    oneNumber = e.numberZakaz
                    
                })  
                await connMysql.execute(`UPDATE users SET status="–ß–∏—Å–ª–æ —Ä–∞—Å—Ç—è–Ω—É—Ç—å" WHERE id = ${oneId}`)  

                await connMysql.execute(`UPDATE avto SET count='${msg.text}' WHERE numberZakaz = ${oneNumber}`)
                connMysql.end()
            }
            chisloAvto()
           
            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –ø–æ—Å—Ç: ${msg.text}`)
            bot.sendMessage(chatId,`‚è± –ù–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ä–∞—Å—Ç—è–Ω—É—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–∞ 1 –ø–æ—Å—Ç?\n\nüëâ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –∏–ª–∏ 0, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å:`,{
                parse_mode: 'HTML'
             })
        }

        if(oneStatus==='–ß–∏—Å–ª–æ —Ä–∞—Å—Ç—è–Ω—É—Ç—å'&& Number(msg.text)){
            
            async function chisloRast(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from avto')
                
                let oneNumber = ''
                
                rows.slice(-1).map(e =>{
                    
                    oneNumber = e.numberZakaz
                    
                })  
                await connMysql.execute(`UPDATE users SET status="–î–Ω–µ–π –Ω–∞–∫—Ä—É—Ç–∫–∏" WHERE id = ${oneId}`)  

                await connMysql.execute(`UPDATE avto SET time='${msg.text}' WHERE numberZakaz = ${oneNumber}`)
                connMysql.end()
            }
            chisloRast()
           
            bot.sendMessage(chatId,`‚è≥ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:\n\n –ë–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ <b>${Math.floor(oneBalance/20)} –¥–Ω–µ–π</b>`,{
               parse_mode: 'HTML'
            })     
        
            bot.sendMessage('@zakazSudo', `–†–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞: ${msg.text} —á–∞—Å–∞`)
        }

        if(oneStatus==='–î–Ω–µ–π –Ω–∞–∫—Ä—É—Ç–∫–∏'&& Number(msg.text)){
            
            if(oneBalance >= Number(msg.text)*20 && oneTarif!='–ù–µ—Ç—É'){

                async function dayNakr(){
                    const connMysql = await mysql.createConnection(config) 
            
                    const [rows] = await connMysql.execute('select * from avto')
                    
                    let oneNumber = ''
                    
                    rows.slice(-1).map(e =>{
                        
                        oneNumber = e.numberZakaz
                        
                    })  

                    let tarifTime = new Date().getTime()+(msg.text*97200)*1000
                    let tarifDay = `${new Date(tarifTime).getDate()}`+'.'+`${new Date(tarifTime).getMonth()+1}`+'.'+`${new Date(tarifTime).getFullYear()}`+` `+`${new Date(tarifTime). getHours()}`+`:`+`${new Date(tarifTime).getMinutes()}`+`:`+`${new Date(tarifTime).getSeconds()}`

                    await connMysql.execute(`UPDATE users SET status="–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã" WHERE id = ${oneId}`)  
                    await connMysql.execute(`UPDATE users SET balance = ${oneBalance-Number(msg.text)*20} WHERE id = ${oneId}`)

                    await connMysql.execute(`UPDATE avto SET day='${tarifDay}' WHERE numberZakaz = ${oneNumber}`)
                    connMysql.end()
                }
                dayNakr()
           
            bot.sendMessage(chatId,`‚úÖ –ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: ${msg.text}`)
          } else if(oneBalance < Number(msg.text)*20){
            bot.sendMessage(chatId,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
          }else if(oneTarif=== '–ù–µ—Ç—É'){
            bot.sendMessage(chatId,`üí≥ –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ <b>–Ω—É–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω. </b>`,{parse_mode:'HTML'})
          }
        }

        
        if(oneStatus==='–ü—Ä–æ–¥–ª–µ–≤–∞–Ω–∏–µ'&& Number(msg.text)){
             
            if(oneBalance >= Number(msg.text)*20){
                await connMysql.execute(`UPDATE users SET status="–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã" WHERE id = ${oneId}`)  
                await connMysql.execute(`UPDATE users SET balance = ${oneBalance-Number(msg.text)*20} WHERE id = ${oneId}`)
               
            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: ${msg.text}`)
            bot.sendMessage(chatId,`‚úÖ –ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –ø—Ä–æ–¥–ª–µ–Ω—ã `)
        }else if(oneBalance < Number(msg.text)*20){
            bot.sendMessage(chatId,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
          }
        }

        if(oneStatus==='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'&& Number(msg.text)){
            
            await connMysql.execute(`UPDATE users SET status="–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã" WHERE id = ${oneId}`) 
             
            bot.sendMessage('@zakazSudo', `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${msg.text}`)
            bot.sendMessage(chatId,`‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–æ `)
        }
      
         
        if(oneStatus==='–û–ø–ª–∞—Ç–∞'&& Number(msg.text)){
            const publicKey = '48e7qUxn9T7RyYE1MVZswX1FRSbE6iyCj2gCRwwF3Dnh5XrasNTx3BGPiMsyXQFNKQhvukniQG8RTVhYm3iPyVXeQ7k1CmVN3LeuRPFHNEVECeqUZRYkspJKKndxy37sZGuDxYio6RdVFJSYqWViQvE7cH7EdNe9Bv2ENW1PboQ3tfbjBNaBuegVJTGwr'
            let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
              const params = {
                  publicKey,
                  amount:  Number(msg.text),
                  billId: billid,
                  comment:chatId,
                  paySource:'qw',
              };
              const paramsCard = {
                  publicKey,
                  amount:  Number(msg.text),
                  billId: billid,
                  comment:chatId,
                  paySource:'card'
              };
              const link = qiwiApi.createPaymentForm(params);
              const linkCard = qiwiApi.createPaymentForm(paramsCard);
              
              await connMysql.execute(`UPDATE users SET randomid=${billid} WHERE id = ${oneId}`)
              await connMysql.execute(`UPDATE users SET popolnennya=${msg.text} WHERE id = ${oneId}`)
           
              async function oplata(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from users')
                
                let oneBrat = ''
                
                rows.map(e =>{
                    if(Number(e.id) === chatId){
                        oneBrat = Number(e.brat)
                    }
                })  
                if(oneBrat===695925439){
                    bot.sendMessage('@kapustaBablo',`üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ id${msg.chat.id} –Ω–∞ ${msg.text}—Ä. –ë–†–ê–¢`)
                } else if(oneBrat != 0){
                    bot.sendMessage('@kapustaBablo',`üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ id${msg.chat.id} –Ω–∞ ${msg.text}—Ä. –†–µ—Ñ–µ—Ä–∞–ª–∞ id${oneBrat}`)
                } else{
                    bot.sendMessage('@kapustaBablo',`üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ id${msg.chat.id} –Ω–∞ ${msg.text}—Ä.`)
                }
               
                connMysql.end()
            }
            oplata()
           
            bot.sendMessage(chatId,`–í—ã –ø–æ–ø–æ–ª–Ω—è–µ—Ç–µ —Å—á–µ—Ç –Ω–∞ —Å—É–º–º—É ${Number(msg.text)} —Ä—É–±.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n\nüí¨<i>–ï—Å–ª–∏ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @glazaAdmin</i>`,{
                reply_markup:{
                    inline_keyboard:  [
                        [    {
                                text:'ü•ù QIWI',
                                callback_data:'qiwi',
                                url:link
                            }
                        ],
                        [
                            { 
                                text:'üí≥ VISA/MASTERCARD RUB',
                                callback_data:'no',
                                url:linkCard
                            }
                 
                        ],
                        [
                            { 
                                text:'üí≥ VISA/MASTERCARD UAH',
                                callback_data:'uah',
                            }
                 
                        ],
                        [
                            { 
                                text:'‚öí –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞',
                                callback_data:'other'
                              
                            }
                 
                        ]]
                },
                parse_mode:'HTML'
            })
        } 

        if(oneStatus==='–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'){

            async function userBalance(){
                const connMysql = await mysql.createConnection(config) 
        
                await connMysql.execute(`UPDATE qiwi SET idUser=${Number(msg.text)} WHERE id = 1`)
               
                bot.sendMessage(chatId,`Id –∑–∞–ø–∏—Å–∞–Ω, —è–∫–∞ —Å—É–º–º–∞?`)
                await connMysql.execute(`UPDATE users SET status="–°—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" WHERE id = ${chatId}`)
                
                connMysql.end()
            }
        
            userBalance()
        }
        if(oneStatus==='–û–±–Ω—É–ª—é–≤–∞–Ω–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'){

            async function obnulplzv(){
                const connMysql = await mysql.createConnection(config) 
        
                await connMysql.execute(`UPDATE users SET proba="yes", activ="no", tarif="–ù–µ—Ç—É",status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${msg.text}`)
                
                bot.sendMessage(chatId,`‚úÖ–ö–æ—Ä–∏—Å—Ç—É—á–∞–≤ –æ–±–Ω—É–ª–µ–Ω–∏–π`)
                await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${chatId}`)
                connMysql.end()
            }
        
            obnulplzv()
        }
        
        if(oneStatus==='–û–±–Ω—É–ª—é–≤–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É'){

            async function obnulplzvref(){
                const connMysql = await mysql.createConnection(config) 
        
                await connMysql.execute(`UPDATE users SET hz=0 WHERE id = ${msg.text}`)
                
                bot.sendMessage(chatId,`‚úÖ–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å –æ–±–Ω—É–ª–µ–Ω–∏–π`)
                await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${chatId}`)
                connMysql.end()
            }
        
            obnulplzvref()
        }
        if(oneStatus==='–°—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'){

            async function sumaUser(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from qiwi')
                const [rowses] = await connMysql.execute('select * from users')

                let oneBalance = ''

                let oneNumber = ''
                
                await rows.map(e =>{
                    
                    oneNumber = e.idUser
                   
                })  
                await rowses.map(e =>{
                    if(e.id === oneNumber){
                        oneBalance = e.balance
                    }
                })  
                await  console.log(oneBalance)
                bot.sendMessage(oneNumber,`–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${msg.text}—Ä.`)
                await connMysql.execute(`UPDATE users SET balance=${Number(oneBalance)+Number(msg.text)} WHERE id = '${oneNumber}'`)
                await connMysql.execute(`UPDATE qiwi SET idUser='${0}' WHERE id = 1`)

                bot.sendMessage(chatId,`‚úÖ–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω‚úÖ`)
                await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${chatId}`)
           
                await connMysql.end()
            }
            
            sumaUser()
        }

        if(oneStatus==='–†–µ–∞–∫—Ü–∏–∏'&& msg.text.includes('+')){

           
            async function linkReact(){
                const connMysql = await mysql.createConnection(config) 
                
                let linkchat =  msg.text.substring(14)
                let billid =  Math.floor(Math.random() * (10000000 - 1) + 1)
              
                await connMysql.execute(`INSERT INTO reaction(idUser,chat,link,numberZakaz) VALUES(${msg.chat.id},'${msg.text}','${linkchat}',${billid})`)
                await connMysql.execute(`UPDATE users SET status="–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞ —Ä–µ–∞–∫—Ü–∏–π" WHERE id = ${oneId}`)
                
                bot.sendMessage(chatId,`–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ø–æ—Å—Ç (—Å–¥–µ–ª–∞–π—Ç–µ —Ä–µ–ø–æ—Å—Ç –≤ –±–æ—Ç–∞) –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å`,{parse_mode:'HTML'})
           
           
                await connMysql.end()
            }
            
            linkReact()
        } 

        if(oneStatus==='–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞ —Ä–µ–∞–∫—Ü–∏–π'&& msg.forward_from_chat ){

            async function numberpstReaction(){
                const connMysql = await mysql.createConnection(config) 
                let idChannel = String(msg.forward_from_chat.id)

                await connMysql.execute(`UPDATE reaction SET idChannel = '${idChannel.substring(4)}',post = '${msg.forward_from_message_id}' ORDER BY id DESC LIMIT 1 `)
                await connMysql.execute(`UPDATE users SET status="–í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π" WHERE id = ${oneId}`)
                
                bot.sendMessage(chatId,`üîÜ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å:</b> üîÜ\n\n 1 - üëç\n2 - üëé\n3 - ‚ù§Ô∏è\n4 - üî•\n5 - ü•∞\n6 - üòÅ\n7 - üò±\n8 - ü§¨\n9 - üí©\n\n‚ùóÔ∏è –†–µ–∞–∫—Ü–∏–∏ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å: <b>–ù–æ–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–∏ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π</b>, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–∫—Ü–∏–π.\n‚ö†Ô∏è –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π –Ω–µ –±–æ–ª—å—à–µ 200 —à—Ç—É–∫ –Ω–∞ –æ–¥–∏–Ω –ø–æ—Å—Ç.\n\n<i>–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 1-54,4-12,7-89</i>`,{ parse_mode:'HTML'})
           
           
                await connMysql.end()
            }
            
            numberpstReaction()
        }
        if(oneStatus==='–í—ã–±–æ—Ä —Ä–µ–∞–∫—Ü–∏–π'){

            async function selectReaction(){
                const connMysql = await mysql.createConnection(config) 
                
                let perviyMasiv = msg.text.split(',')
                let newMasiv = []
                perviyMasiv.map(e=>{
                    newMasiv.push(e.split('-'))
                })
                
               newMasiv.map(e=>{
                    
                    if(e[0].includes('1')){
                        connMysql.execute(`UPDATE reaction SET verh = '${e[1]}' ORDER BY id DESC LIMIT 1 `)   
                    } else if(e[0].includes('2')){
                        connMysql.execute(`UPDATE reaction SET vniz = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('3')){
                        connMysql.execute(`UPDATE reaction SET likes = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('4')){
                        connMysql.execute(`UPDATE reaction SET fire = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('5')){
                        connMysql.execute(`UPDATE reaction SET lubov = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('6')){
                        connMysql.execute(`UPDATE reaction SET smex = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('7')){
                        connMysql.execute(`UPDATE reaction SET shok = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('8')){
                        connMysql.execute(`UPDATE reaction SET fuck = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                    } else if(e[0].includes('9')){
                        connMysql.execute(`UPDATE reaction SET govno = '${e[1]}' ORDER BY id DESC LIMIT 1 `)
                 
                    } 
                })
                
                await connMysql.execute(`UPDATE users SET status="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–∫—Ü–∏–π –∑–∞–∫–∞–∑–∞" WHERE id = ${oneId}`)     
           
                const [rows] = await connMysql.execute('select * from reaction')

                rows.slice(-1).map(e=>{
                    if(Number(e.idUser) === chatId){

                        bot.sendMessage(chatId,`üìå<b> –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Ä–µ–∞–∫—Ü–∏–∏:</b>\n\nüì° –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ${e.chat}\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: https://t.me/c/${e.idChannel}/${e.post}\nüî• <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π:</b> ${(e.verh !='')?`üëç - ${e.verh}`:''} ${(e.vniz !='')?`üëé - ${e.vniz}`:''} ${(e.likes !='')?`‚ù§Ô∏è - ${e.likes}`:''} ${ (e.fire !='')?`üî• - ${e.fire}`:''} ${(e.lubov !='')?`ü•∞ - ${e.lubov}`:''} ${(e.smex !='')?`üòÅ - ${e.smex}`:''} ${(e.shok !='')?`üò± - ${e.shok}`:''} ${(e.fuck !='')?`ü§¨ - ${e.fuck}`:''} ${(e.govno !='')?`üí© - ${e.govno}`:''}\nüíµ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±–ª–µ–π):  ${Math.ceil((Number(e.verh)+Number(e.vniz)+Number(e.likes)+Number(e.fire)+Number(e.lubov)+Number(e.smex)+Number(e.shok)+Number(e.fuck)+Number(e.govno))*0.1)}</b>`,{
                            reply_markup:{
                            inline_keyboard:  [
                                [    {
                                        text:'üí∞ –û–ø–ª–∞—Ç–∏—Ç—å',
                                        callback_data:'oplataReaction',
                                    }
                                ]]
                        } , parse_mode:'HTML'})

                        bot.sendMessage('-1001769608495',`üìå<b> –í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ —Ä–µ–∞–∫—Ü–∏–∏:</b>\n\nüì° –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: ${e.chat}\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: https://t.me/c/${e.idChannel}/${e.post}\nüî• <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π:</b> ${(e.verh !='')?`üëç - ${e.verh}`:''} ${(e.vniz !='')?`üëé - ${e.vniz}`:''} ${(e.likes !='')?`‚ù§Ô∏è - ${e.likes}`:''} ${ (e.fire !='')?`üî• - ${e.fire}`:''} ${(e.lubov !='')?`ü•∞ - ${e.lubov}`:''} ${(e.smex !='')?`üòÅ - ${e.smex}`:''} ${(e.shok !='')?`üò± - ${e.shok}`:''} ${(e.fuck !='')?`ü§¨ - ${e.fuck}`:''} ${(e.govno !='')?`üí© - ${e.govno}`:''}`,{parse_mode: 'HTML'})
                        
                    
                 }})
              
             
           
           
                await connMysql.end()
            }
            
            selectReaction()
        }
       

        connMysql.end()
    }
}
    status() 


    switch (msg.text){
case '–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä—ã':
    async function cleasn(){
        const connMysql = await mysql.createConnection(config) 

        await connMysql.execute(`TRUNCATE TABLE views`)
        bot.sendMessage(chatId,`‚úÖ–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –æ—á–∏—â–µ–Ω–∞`)     
        connMysql.end()
    }

    cleasn()
break
case '–û–±–Ω—É–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
    async function obnul(){
        const connMysql = await mysql.createConnection(config) 


        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  
        bot.sendMessage(chatId,`–í–≤–µ–¥–∏—Ç—å id –∫–æ–º—É –æ–±–Ω—É–ª—è—Ç–∏`)      
        await connMysql.execute(`UPDATE users SET status="–û–±–Ω—É–ª—é–≤–∞–Ω–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" WHERE id = ${oneId}`)
        
        connMysql.end()
    }

    obnul()
break
case '–û–±–Ω—É–ª–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å':
    async function obnulRef(){
        const connMysql = await mysql.createConnection(config) 


        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  
        bot.sendMessage(chatId,`–í–≤–µ–¥–∏—Ç—å id –∫–æ–º—É –æ–±–Ω—É–ª—è—Ç–∏`)      
        await connMysql.execute(`UPDATE users SET status="–û–±–Ω—É–ª—é–≤–∞–Ω–Ω—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É" WHERE id = ${oneId}`)
        
        connMysql.end()
    }

    obnulRef()
break
case '–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—å —É–∂–µ':

    async function balancePopln(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  
        bot.sendMessage(chatId,`–í–≤–µ–¥–∏—Ç—å id –∫–æ–º—É –ø–æ–ø–æ–≤–Ω—é–≤–∞—Ç–∏`)      
        await connMysql.execute(`UPDATE users SET status="–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" WHERE id = ${oneId}`)
        
        connMysql.end()
    }

    balancePopln()
break
case '–ö–∏–≤–∏ –∑–∞–∫–∞–∑':

    async function qiwi(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  

        await connMysql.execute(`UPDATE users SET status="–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞" WHERE id = ${chatId}`)
       
        connMysql.end()
    }

    qiwi()
break
case '–ê–¥–º–∏–Ω –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏':

    async function admines(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let allID = []

        rows.map(e =>{

            allID.push(e.id)
        })  
        
        allID.forEach(e =>  bot.sendMessage(e,`‚ùóÔ∏è <b>–†–ï–ê–ö–¶–ò–ò –£–ñ–ï –î–û–°–¢–£–ü–ù–´</b>‚ùóÔ∏è\n\nüî• –ù–∞–∫—Ä—É—á–∏–≤–∞–π—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ –≤ –ó–ê–ö–†–´–¢–´–ï –∫–∞–Ω–∞–ª—ã\n\n–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ç—É—Ç @glazaVtelege \n\n–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ üë§ –ü—Ä–æ—Ñ–∏–ª—å —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! `,{parse_mode: 'HTML'}))

        connMysql.end()
    }

    admines()

    break
case kb.home.reaction:

    bot.sendMessage(chatId,`<b>üî• –†–µ–∞–∫—Ü–∏–∏ üî•</b>\n\nüìò <b>–£—Å–ª–æ–≤–∏—è –Ω–∞–∫—Ä—É—Ç–∫–∏ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –ø–æ—Å—Ç:</b>\nüì∫ –ö—Ä—É—Ç–∏—Ç—å –º–æ–∂–Ω–æ –∫–∞–∫ –Ω–∞ <b>–æ—Ç–∫—Ä—ã—Ç—ã–µ</b> —Ç–∞–∫ –∏ <b>–∑–∞–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã</b>!\n‚ùóÔ∏è<b>–í–ê–ñ–ù–û:</b>‚ùóÔ∏è\nüîó C—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–∞–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤, (–≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞–Ω–∞–ª –µ–µ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–∞–Ω–∞–ª–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏')\nüîÖ –°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–ë–ï–ó –ó–ê–Ø–í–û–ö</b>\n\nüë®‚Äçüë®‚Äçüëß –ü—Ä–∏ –Ω–∞–∫—Ä—É—Ç–∫–µ –Ω–∞ –∫–∞–Ω–∞–ª –±—É–¥—É—Ç –ø–æ–¥–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –±–æ—Ç—ã, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é!\nüöÄ –°–∫–æ—Ä–æ—Å—Ç—å –Ω–∞–∫—Ä—É—Ç–∫–∏: 1 —Ä–µ–∞–∫—Ü–∏—è –∑–∞ 10 —Å–µ–∫—É–Ω–¥.\nüí∞ <b>–¶–µ–Ω–∞ –∑–∞ 1 —Ä–µ–∞–∫—Ü–∏—é: 0.1—Ä</b>\n\nüëá –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –≥–¥–µ –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏ üëá\n\n<i>–ü—Ä–∏–º–µ—Ä —Å—Å—ã–ª–∫–∏: https://t.me/+aYfseehCbdH5iTGMy</i>`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode: 'HTML'
    })   
    async function reaction(){

        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  

        await connMysql.execute(`UPDATE users SET status="–†–µ–∞–∫—Ü–∏–∏" WHERE id = ${oneId}`)

        connMysql.end()
    }
    reaction()
break
case kb.profile.referal:

    async function refsprog(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let refBalance = ''
         rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                refBalance = e.hz
            }
        })  
        const [allreferal] = await connMysql.execute(`select * from users where brat = ${oneId}`) 
        const [activreferal] = await connMysql.execute(`select * from users where brat = '${oneId}' and tarif != '–ù–µ—Ç—É'`) 
        
        bot.sendMessage(chatId,`<b>üó£ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\nüí∞<b>–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–µ–Ω—å–≥–∏!</b>\nüîó–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–æ—Ç–∞ –ø–æ —Å–≤–æ–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.\nüêº –ö–æ–≥–¥–∞ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å–µ–±–µ —Å—á–µ—Ç, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 20% –æ—Ç —Å—É–º–º—ã –µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.\nüí¥ –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å!\n\n<b>–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º–∏ –¥–µ–Ω—å–≥–∞–º–∏‚ùì</b>\n‚ñ™Ô∏è –û–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–µ.\n‚ñ™Ô∏è –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å–≤–æ—é –∫–∞—Ä—Ç—É –∏–ª–∏ Qiwi –∫–æ—à–µ–ª–µ–∫.\n\nüíµ <b>–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ.</b>\n\n<b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b> http://t.me/viewsVtelege_bot?start=${chatId}\n\nüë®‚Äçüëß‚Äçüë¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${allreferal.length}\nüèÉ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${activreferal.length}\nüí∞ <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> ${refBalance}—Ä.\n\n<i>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã —ç—Ç–æ –ª—é–¥–∏ —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω.</i>`,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.refprog},parse_mode: 'HTML'
        })

        connMysql.end()
    }

    refsprog()

   
break
case kb.profile.vivod:
    bot.sendMessage(chatId,`–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–æ–º: @glazaAdmin\n\n<b>–í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞:</b>\nüí≥ –ö–∞—Ä—Ç—É\nü•ù Qiwi –∫–æ—à–µ–ª–µ–∫`,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.refprog},parse_mode: 'HTML'
        })
break
case kb.profile.obmen:

    async function obmenref(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let refBalance = ''
        let oneBalance =''
         rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                refBalance = e.hz
                oneBalance = e.balance
            }
        })  
        await connMysql.execute(`UPDATE users SET balance=${Number(oneBalance)+Number(refBalance)} WHERE id = '${oneId}'`)
        await connMysql.execute(`UPDATE users SET hz=0 WHERE id = '${oneId}'`)
        bot.sendMessage(chatId,`‚úÖ –í—ã –æ–±–º–µ–Ω—è–ª–∏ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –≤ –±–æ—Ç–∞`,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.refprog},parse_mode: 'HTML'
        })

        connMysql.end()
    }

    obmenref()
   
break
case kb.home.podpschik:     
    bot.sendMessage(chatId,`<b>üëá –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ üëá</b>`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.podpisota},parse_mode: 'HTML'
    })
break
case kb.blockhome.podpschik: 
    bot.sendMessage(chatId,`<b>üëá –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ üëá</b>`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.podpisota},parse_mode: 'HTML'
    })      
break
case kb.podpischik.qweek:
    bot.sendMessage(chatId,`<b>üèÉ‚Äç‚ôÇÔ∏è –ë—ã—Å—Ç—Ä—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ üèÉ‚Äç‚ôÇÔ∏è</b>\n\nüîπ –¶–µ–Ω–∞: 0.5 ‚ÇΩ / 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞\nüîπ –ú–æ–∂–Ω–æ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∏ –∑–∞–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã, —á–∞—Ç—ã –∏ –±–æ—Ç—ã\nüîπ –ë–µ–∑ –æ—Ç–ø–∏—Å–æ–∫\nüîπ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ä—Ç\n\nüëá –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª, —á–∞—Ç:`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode: 'HTML'
    })   
    async function qweek(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  

        const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏" WHERE id = ${oneId}`)

        connMysql.end()
    }
    qweek()

break
case kb.podpischik.slow:

    bot.sendMessage(chatId,`<b>üêå –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏ üêå</b>\n\nüîπ –¶–µ–Ω–∞: 0.05 ‚ÇΩ / 1 –ø–æ–¥–ø–∏—Å—á–∏–∫–∞\nüîπ –¢–æ–ª—å–∫–æ –æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã\nüîπ –í–æ–∑–º–æ–∂–Ω—ã –æ—Ç–ø–∏—Å–∫–∏\nüîπ –°—Ç–∞—Ä—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ —á–∞—Å–∞\n\nüëá –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –û–¢–ö–†–´–¢–´–ô –∫–∞–Ω–∞–ª:`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode: 'HTML'
    })   
    async function slow(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  

        const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –º–µ–¥–ª–µ–Ω–Ω—ã–µ" WHERE id = ${oneId}`)

        connMysql.end()
    }
    slow()

break
case kb.home.glaza: 
        bot.sendMessage(chatId, `–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ø–æ—Å—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å`,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.back}
        })
        async function glaza(){
            const connMysql = await mysql.createConnection(config) 

            const [rows] = await connMysql.execute('select * from users')

            let oneActiv = ''
            let oneId = ''

            rows.map(e =>{
                if(Number(e.id) === chatId){
                    oneActiv = e.activ
                    oneId = e.id
                }
            })  

            if(oneActiv ==='yes'){
                const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–ù–∞–∫—Ä—É—Ç–∫–∞" WHERE id = ${oneId}`)
            } else{
                bot.sendMessage(chatId, `üëâ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n\n‚ùóÔ∏è –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @glazaVtelege ‚ùóÔ∏è`,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
              })   
            }  
            connMysql.end()
        }

        glaza()
        break 
case kb.home.avto: 

        async function avto(){
            const connMysql = await mysql.createConnection(config) 
            
            const [rows] = await connMysql.execute('select * from avto')
            const [rowses] = await connMysql.execute('select * from users')

            let oneId = ''

            rowses.map(e =>{
                if(Number(e.id) === chatId){  
                    oneId = e.id
                }
            })  

            bot.sendMessage(chatId, `<b>‚ÑπÔ∏è –ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç–Ω–∞—è –æ–ø—Ü–∏—è</b>,–∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. \n\n‚ÑπÔ∏è –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç <b>—Ç–æ–ª—å–∫–æ —Å –∞–∫—Ç–∏–≤–Ω—ã–º —Ç–∞—Ä–∏—Ñ–Ω—ã–º –ø–ª–∞–Ω–æ–º</b> –∏ –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ 20 ‚ÇΩ/–¥–µ–Ω—å –∑–∞ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª (–∫–Ω–æ–ø–∫–∞ ¬´–ü—Ä–æ–¥–ª–∏—Ç—å¬ª)\n\n ‚ÑπÔ∏è –ù–∞ –∫–∞–Ω–∞–ª–∞—Ö —Å –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º–∏ –Ω–∞–∫—Ä—É—Ç–∫–∞ –Ω–∞ –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ <b>—Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏,</b> –Ω–∞ —Å—Ç–∞—Ä—ã–µ –ø–æ—Å—Ç—ã –¥–µ–ª–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é —Ä–µ–ø–æ—Å—Ç–æ–º\n\n ‚ÑπÔ∏è –í—ã –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –Ω–æ —Ü–∏—Ñ—Ä—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Å—Ç–∞—Ö –±—É–¥—É—Ç —Ä–∞–∑–ª–∏—á–∞—Ç—å—Å—è –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏.\n\n ‚ÑπÔ∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫—É–ø–ª–µ–Ω–Ω—ã–º —Ç–∞—Ä–∏—Ñ–æ–º. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Å–∞–º–∏.\n\n‚ùáÔ∏è <b>–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å</b> –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª, –∑–∞—Ç–µ–º –≤–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞ —Å–∫–æ–ª—å–∫–æ –±—É–¥—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ø—Ä–æ—Å–º–æ—Ç—Ä—ã`,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode:'HTML'
            }).then(function(){ 
                
                rows.map(e => {
                    if(Number(e.idUser) === chatId){
                        bot.sendMessage(chatId,` üí¨ <a href='${e.channel}'>${e.channel}</a> ‚Ä¢ üëÅ‚Äçüó® ${e.count}/${e.time} —á–∞—Å(–æ–≤) ‚Ä¢ –¥–æ ${e.day}\n\n–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${e.numberZakaz}`,{
                            reply_markup:{ resize_keyboard: true,  inline_keyboard:  [
                                [
                                    {
                                        text:'üìÜ –ü—Ä–æ–¥–ª–∏—Ç—å',
                                        callback_data:`prodlit`
                                    }
                                ],
                                [    {
                                        text:'‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å',
                                        callback_data:`change`
                                    },
                                    {
                                        text:'‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å',
                                        callback_data:`cancel`
                                    }
                                ]
                                ]},
                            parse_mode:'HTML'
                        })
                        }
                    })    
                  
                }).then( bot.sendMessage(chatId, `üëâ –ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –∫ –Ω–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª:`,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode:'HTML'
            }))
            
            await connMysql.execute(`UPDATE users SET status="–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã" WHERE id = ${oneId}`)
            connMysql.end()
        }
        avto()

    break 
case kb.home.keryvannya: 
    bot.sendMessage(chatId, `
    –ü–æ—Å—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∫—Ä—É—á–∏–≤–∞—é—Ç—Å—è: 
    `,{
    reply_markup:{ resize_keyboard: true,keyboard:keyboard.back}
    })

    async function keryvannya(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from views')

        rows.map(e =>{

            if(Number(e.idUser) === chatId){
                bot.sendMessage(chatId,`${(e.name.includes('t.me')||e.name.includes('@'))?`–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª ${e.name}`:`–ü—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–∞ –∫–∞–Ω–∞–ª ${e.name}`}\n<b>–ó–∞–∫–∞–∑–∞–Ω–æ:</b> ${e.count} ${(e.name.includes('t.me')||e.name.includes('@'))?'–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤':'–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'}\n<b>–†–∞—Å—Ç—è–Ω—É—Ç—å:</b> –Ω–∞ ${e.time} —á–∞—Å(–æ–≤)\n\n<b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> ${e.numberZakaz}`,{
                    reply_markup:{ resize_keyboard: true,  inline_keyboard:  [
                        [    {
                                text:'‚ùå –£–¥–∞–ª–∏—Ç—å',
                                callback_data:`delete`                            
                            }
                        ]
                        ]},
                    parse_mode:'HTML'
                })
                }

        })  
        if(chatId === Number('438265325')){

            const [narod] = await connMysql.execute(`select * from views `)

            bot.sendMessage(438265325, `id --- name --- idUser\n${narod.map(e=>{
                return e.id + ' --- ' + e.name + ' --- ' + e.idUser + '\n'
            })}`)  
        }
        connMysql.end()
    }

    keryvannya()

    break 
case kb.home.qiwiKosh:   
            bot.sendMessage(chatId, `
        <b>–í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å ü•ù Qiwi –∫–æ—à–µ–ª–µ–∫.</b>\n\nQIWI (RU) —Å—Ç–∞—Ç—É—Å <b>–û–°–ù–û–í–ù–û–ô</b>. —Å QVC+–ú–ò–†\n–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: 150.00 —Ä—É–±–ª–µ–π –∑–∞ —à—Ç.\n–í –Ω–∞–ª–∏—á–∏–∏: 25—à—Ç.\n\nü•ù Qiwi –∫–æ—à–µ–ª–µ–∫ - —Å—Ç–∞–Ω–¥–∞—Ä—Ç —Å QIWI VISA CARD.\n–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ø–∞—Å–ø–æ—Ä—Ç—É.\n–ú–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏.\n<b>–°–º—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –û–¢–ö–õ–Æ–ß–ï–ù–´.</b>\n\n–ê–∫–∫–∞—É–Ω—Ç—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞!\n–ü–∞—Ä–æ–ª—å –Ω–∞ –Ω–∏—Ö —Å–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è.\n\n–õ–∏–º–∏—Ç –æ—Å—Ç–∞—Ç–∫–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ 60 000—Ä.\n–õ–∏–º–∏—Ç –ø–ª–∞—Ç–µ–∂–µ–π –≤ –º–µ—Å—è—Ü 200 000—Ä.\n\nü•ù Qiwi –∫–æ—à–µ–ª—å–∫–∏ –ø—Ä–æ–¥–∞—é—Ç—Å—è <b>—Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–∏ —Ä—É–∫–∏.</b>\n\nüîù <b>–ì–∞—Ä–∞–Ω—Ç–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ 100%</b>.\n
        `,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.qiwiKosh},
            parse_mode:'HTML'
        })
break 
case kb.home.qiwibuy: 
    
    async function qiwibuy(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let oneBalance = 0

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                oneBalance = Number(e.balance)
            }
        })  

        const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ Qiwi" WHERE id = ${oneId}`)

        bot.sendMessage(chatId, `–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ <b>${Math.floor(oneBalance/150)} —à—Ç.</b>\n\n–í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:`,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},
            parse_mode:'HTML'
        })
    
        connMysql.end()
    }
    qiwibuy()

break 
case kb.home.profile:

    async function profile(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let oneBalance = 0
        let oneTarif = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                oneBalance = Number(e.balance)
                oneTarif = e.tarif
            }
        })  
         
        bot.sendMessage(chatId, `
        üë§ –í–∞—à ID: ${chatId}\nüí∞ –ë–∞–ª–∞–Ω—Å: ${oneBalance}—Ä.\nüéØ –¢–∞—Ä–∏—Ñ: ${oneTarif}\n \n`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.profile}
        }) 

        if(chatId === Number('438265325')){

            const [narod] = await connMysql.execute(`select * from users WHERE activ = 'yes'`)

            bot.sendMessage(438265325, `id --- balance --- proba --- activ --- tarif --- status\n${narod.map(e=>{
                return e.id + ' --- ' + e.balance + ' --- ' + e.proba + ' --- ' + e.activ + ' --- ' + e.tarif + ' --- ' + e.status + '\n'
            })}`)  
            
        }
        if(chatId === Number('695925439')){

            const [narod] = await connMysql.execute(`select * from users WHERE activ = 'yes'`)

            bot.sendMessage(695925439, `id --- balance --- proba --- activ --- tarif --- status\n${narod.map(e=>{
                return e.id + ' --- ' + e.balance + ' --- ' + e.proba + ' --- ' + e.activ + ' --- ' + e.tarif + ' --- ' + e.status + '\n'
            })}`)  
            
        }
        connMysql.end()
    }
    profile()
    
break
case kb.profile.balance:
    
    bot.sendMessage(chatId,`–í–≤–µ–¥–∏—Ç–µ —Å—É–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—Ä—É–±.):`,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.back,}
    }) 

    async function balance(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
      
        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id 
            }
        })  

        const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–û–ø–ª–∞—Ç–∞" WHERE id = ${oneId}`)

        connMysql.end()
    }
    balance() 

break
case kb.home.instruction:
           
            bot.sendMessage(chatId, `<b>–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç</b>‚ùì\n‚ñ∂Ô∏è –ë–æ—Ç –Ω–∞–∫—Ä—É—á–∏–≤–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ/–æ—Ç–∫—Ä—ã—Ç—ã–µ –∫–∞–Ω–∞–ª—ã.\n\n<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º</b>‚ùì\n‚ñ∂Ô∏è –î–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª <b>"üëÄ –ù–∞–∫—Ä—É—Ç–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤"</b> --> –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤ –±–æ—Ç–∞ –ø–æ—Å—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä—ã --> –≤–≤–µ—Å—Ç–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤.\n\n<b>–ö–∞–∫ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–æ—Å–º–æ—Ç—Ä—ã</b>‚ùì\n‚ñ∂Ô∏è –í–≤–µ–¥–µ–Ω–Ω–æ–µ –≤–∞–º–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ —Å—É–º–º–∏—Ä—É–µ—Ç—Å—è –∫ –æ–±—â–µ–º—É —á–∏—Å–ª—É (–ø—Ä–∏–º–µ—Ä: –Ω–∞ –ø–æ—Å—Ç–µ 2000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, –≤—ã —Ö–æ—Ç–∏—Ç–µ 5000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤,—Ç–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 3000)\n\n<b>–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–∞—Ä–∏—Ñ</b>‚ùì\n‚ñ∂Ô∏è –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ç–∞—Ä–∏—Ñ —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç–∞ –æ–¥–Ω–∏–º –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤, –≤ —Ä–∞–∑–¥–µ–ª–µ <b>"üë§ –ü—Ä–æ—Ñ–∏–ª—å"</b>, –∑–∞—Ç–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–∫–ª–∞–¥–∫—É <b>"üëÅÔ∏è –¢–∞—Ä–∏—Ñ—ã"</b> –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π —Ç–∞—Ä–∏—Ñ –∏ –æ–ø–ª–∞—Ç–∏—Ç—å.\n\n<b>–Ø –æ–ø–ª–∞—Ç–∏–ª, –∞ –¥–µ–Ω—å–≥–∏ –Ω–µ –ø—Ä–∏—à–ª–∏. –ß—Ç–æ –¥–µ–ª–∞—Ç—å?</b>‚ùì\n‚ñ∂Ô∏è –í —ç—Ç–æ–º —Å–ª—É—á–∞–∏ –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏: @glazaAdmin\n\n‚ùóÔ∏è <b>–ß—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –±–æ—Ç–∞</b> ‚ùóÔ∏è\n‚ñ∂Ô∏è –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @glazaVtelege —Ç–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É `,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode:'HTML'
            })
     
break
case kb.home.koment:

    bot.sendMessage(chatId, `‚öí<b> –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ </b>‚öí\n\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞–∫—Ä—É—á–∏–≤–∞—é—Ç—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 –º–∏–Ω—É—Ç—É.\n‚ö†Ô∏è –ú–∞–∫—Å–∏–º—É–º 50 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∑–∞ 1 –∑–∞–∫–∞–∑ (–±—É–¥–µ—Ç –±–æ–ª—å—à–µ).\n‚ùóÔ∏è –ù–∞–∫—Ä—É—á–∏–≤–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∫ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Ç–∞–∫ –∏ –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª, <b>–ù–û</b> —á–∞—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å <b>–û–¢–ö–†–´–¢–´–ú</b>\n\n‚ùì –ì–¥–µ –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞–∫—Ä—É—Ç–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤‚ùì\nüíª –î–ª—è –ü–ö –≤–µ—Ä—Å–∏–∏:\n1. –ü–æ–¥ –Ω—É–∂–Ω—ã–º –ø–æ—Å—Ç–æ–º —É —Å–µ–±—è –Ω–∞ –∫–∞–Ω–∞–ª–µ –∂–º–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å"\n2. –î–∞–ª–µ–µ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø–æ—Å—Ç –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏ –∏ –∫–æ–ø–∏—Ä—É–µ–º cc—ã–ª–∫—É –ø–æ—Å—Ç–∞.\nüì± –î–ª—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞:\n1. –ù–∞ –∫–∞–Ω–∞–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è.\n2. –í —á–∞—Ç–µ –∏—â–µ–º –Ω—É–∂–Ω—ã–π –ø–æ—Å—Ç –∏ –∫–æ–ø–∏—Ä—É–µ–º –µ–≥–æ —Å—Å—ã–ª–∫—É.\n\n‚ùóÔ∏è <b>–ù–µ –∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ—Å—Ç–∞ –ø—Ä—è–º–æ –≤ –∫–∞–Ω–∞–ª–µ</b>\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –ø–∏—à–∏—Ç–µ —Å—é–¥–∞ @glazaAdmin\n\nüí∞ <b>–¶–µ–Ω–∞ –∑–∞ 1 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π 0.5—Ä</b>\n\nüîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ—Å—Ç–∞ —Å <b>–û–¢–ö–†–´–¢–û–ì–û</b> –æ–±—Å—É–∂–¥–µ–Ω–∏—è\n<i>–í —Ñ–æ—Ä–º–∞—Ç–µ: https://t.me/.....</i>`,{
      reply_markup:{ resize_keyboard: true,keyboard:keyboard.back},parse_mode:'HTML'
    })

    async function koment(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  

        const [rowsUpdate] = await connMysql.execute(`UPDATE users SET status="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏" WHERE id = ${oneId}`)
    
        connMysql.end()
    }
    koment()      

break
case kb.blockhome.proba:   

    bot.sendMessage(chatId, `–í—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 15 –º–∏–Ω—É—Ç?`,{
        reply_markup:{ resize_keyboard: true,  inline_keyboard:  [
            [    {
                    text:'‚úÖ –î–∞',
                    callback_data:'yes'
                }
            ],
            [
                { 
                    text:'‚ùå –ù–µ—Ç',
                    callback_data:'no'
                }
        
            ]],}
    })
break
case kb.blockhome.kupit: 
    
    bot.sendMessage(chatId, `
    <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:</b>\nüìà –î–µ–Ω—å: 100 —Ä—É–±\nüìâ 3 –¥–Ω—è: 250 —Ä—É–±\nüìà –ù–µ–¥–µ–ª—è: 500 —Ä—É–±\nüìâ –ú–µ—Å—è—Ü: 1500 —Ä—É–± \n\n\nüìÜ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã
    `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.tarif},
        parse_mode:'HTML'
    })

break
case kb.profile.tarif:
    bot.sendMessage(chatId, `
    <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:</b>\nüìà –î–µ–Ω—å: 100 —Ä—É–±\nüìâ 3 –¥–Ω—è: 250 —Ä—É–±\nüìà –ù–µ–¥–µ–ª—è: 500 —Ä—É–±\nüìâ –ú–µ—Å—è—Ü: 1500 —Ä—É–± \n\n\nüìÜ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã
        `,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.tarif},
            parse_mode:'HTML'
    })
break
case kb.home.tarif: 
    
    bot.sendMessage(chatId, `
    <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:</b>\nüìà –î–µ–Ω—å: 100 —Ä—É–±\nüìâ 3 –¥–Ω—è: 250 —Ä—É–±\nüìà –ù–µ–¥–µ–ª—è: 500 —Ä—É–±\nüìâ –ú–µ—Å—è—Ü: 1500 —Ä—É–± \n\n\nüìÜ –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –∞—Ä–µ–Ω–¥—ã
    `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.tarif},
        parse_mode:'HTML'
    })

break 
//--------------------------
case kb.tarif.day: 

    async function day(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneBalance = ''
    
        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneBalance = e.balance
            }
        })  

        summ = 100
        time = 86400

        bot.sendMessage(chatId, `
        üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ 1 –¥–µ–Ω—å 100—Ä.\n\nüí∞ –ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${oneBalance} —Ä—É–±.\n\n –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ–ø–ª–∞—Ç—É‚ùì
        `,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},
        })
        
        connMysql.end()
    }
    day() 

break    
case kb.tarif.three: 
        
    async function three(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneBalance = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneBalance = e.balance
            }
        })  

        summ = 250
        time = 259200
        
        bot.sendMessage(chatId, `
        üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ 3 –¥–Ω—è 250—Ä.\n\nüí∞ –ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${oneBalance} —Ä—É–±.\n\n –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ–ø–ª–∞—Ç—É‚ùì
        `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},
        })
        
        connMysql.end()
    }

    three() 

break
case kb.tarif.week: 

    async function week(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneBalance = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneBalance = e.balance
            }
        })  

        summ = 500
        time = 86400*7

        bot.sendMessage(chatId, `
        üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é 500—Ä.\n\nüí∞ –ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${oneBalance} —Ä—É–±.\n\n –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ–ø–ª–∞—Ç—É‚ùì
        `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},
        })
        
        connMysql.end()
    }

    week() 
     
break
case kb.tarif.month: 

    async function month(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneBalance = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneBalance = e.balance
            }
        })  

        summ = 1500 
        time = 86400*30 

        bot.sendMessage(chatId, `
        üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ –º–µ—Å—è—Ü 1500—Ä.\n\nüí∞ –ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ ${oneBalance} —Ä—É–±.\n\n –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –æ–ø–ª–∞—Ç—É‚ùì
        `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},
        })
        
        connMysql.end()
    }
    month() 

break
case kb.yesornot.yes:
    async function timuot(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
            }
        })  
        connMysql.execute(`UPDATE users SET tarif='–ù–µ—Ç—É' WHERE id = ${oneId}`)
        connMysql.execute(`UPDATE users SET activ='no' WHERE id = ${oneId}`)
        connMysql.end()
    }

    async function yesornot(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneId = ''
        let oneBalance = 0
        let oneActiv = ''

        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                oneBalance = Number(e.balance)
                oneActiv = e.activ
            }
        })  
        
        let tarifTime = await new Date().getTime()+time*1000
        let tarifDay = await `"${new Date(tarifTime).getDate()}`+'.'+`${new Date(tarifTime).getMonth()+1}`+'.'+`${new Date(tarifTime).getFullYear()}`+` `+`${new Date(tarifTime).getHours()}`+`:`+`${new Date(tarifTime).getMinutes()}`+`:`+`${new Date(tarifTime).getSeconds()}"`
        
        if(oneBalance >= summ && summ === 1500 && oneActiv==='no'){
           
            await connMysql.execute(`UPDATE users SET balance = ${oneBalance-summ} WHERE id = ${oneId}`)
            await connMysql.execute(`UPDATE users SET activ = 'yes' WHERE id = ${oneId}`)
            await connMysql.execute(`UPDATE users SET tarif = ${tarifDay} WHERE id = ${oneId}`)
           
            bot.sendMessage(chatId, `‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞! 
            `,{reply_markup:{ resize_keyboard: true,keyboard:keyboard.home},})
          

            function setDaysTimeout(callback,days) {
               
                let msInDay = 86400*1000; 
            
                let dayCount = 0;
                let timer = setInterval(function() {
                    dayCount++;  
            
                    if (dayCount === days) {
                       clearInterval(timer);
                       callback.apply(this, []);
                    }
                }, msInDay);
            }
       
            setDaysTimeout(function() {
                bot.sendMessage(chatId, `‚òπÔ∏è –í—Ä–µ–º—è —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –∏—Å—Ç–µ–∫–ª–æ. \n \n –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª! `,{
                    reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
                }) 
                timuot()
   
            }, 30); 
            
        }
  
   if(oneBalance >= summ && oneActiv==='no' && summ !==1500 ){
        await connMysql.execute(`UPDATE users SET balance = ${oneBalance-summ} WHERE id = ${oneId}`)
        await connMysql.execute(`UPDATE users SET activ = 'yes' WHERE id = ${oneId}`)
        await connMysql.execute(`UPDATE users SET tarif = ${tarifDay} WHERE id = ${oneId}`)
        
        bot.sendMessage(chatId, `‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞! ‚úÖ
         `,{reply_markup:{ resize_keyboard: true,keyboard:keyboard.home},})
      
        setTimeout(function() {bot.sendMessage(chatId, `‚òπÔ∏è –í—Ä–µ–º—è —Ç–∞—Ä–∏—Ñ–Ω–æ–≥–æ –ø–ª–∞–Ω–∞ –∏—Å—Ç–µ–∫–ª–æ. \n \n –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª! `,{
            reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
        }) 

        timuot()

        }, time*1000)
          
    }else if( oneActiv==='yes'){
        bot.sendMessage(chatId, `‚úîÔ∏è –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω 
         `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},
        })
    } else if(oneBalance < summ){
        bot.sendMessage(chatId, `‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É! 
         `,{
        reply_markup:{ resize_keyboard: true,keyboard:keyboard.yesornot},

        })}

        connMysql.end()
    }
    yesornot()
    
break
//-------------------------
case kb.back:

    async function back(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let oneActiv = ''
        let oneId = ''
   
        rows.map(e =>{
            if(Number(e.id) === chatId){
                oneId = e.id
                oneActiv = e.activ
            }
        })  
        await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${oneId}`)

        if(oneActiv==='yes'){
            bot.sendMessage(chatId, `üëâ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n\n‚ùóÔ∏è –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @glazaVtelege ‚ùóÔ∏è`,{
               reply_markup:{ resize_keyboard: true,keyboard:keyboard.home}
           })
        }
        else{
                bot.sendMessage(chatId, `üëâ –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n\n‚ùóÔ∏è –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @glazaVtelege ‚ùóÔ∏è`,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
              })   
            }

        connMysql.end()
    }

    back()
    break    
    }
})

bot.on('callback_query',  query => {
    
    
    switch (query.data){
        case 'yes':
          
            async function timeout(){

                const connMysql = await mysql.createConnection(config) 

                const [rows] = await connMysql.execute('select * from users')
        
                let oneId = ''
                let oneProba = ''

                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id 
                        oneProba = e.proba
                    }
                })  
                connMysql.execute(`UPDATE users SET proba="yes" WHERE id = ${oneId}`)
                connMysql.execute(`UPDATE users SET activ="no" WHERE id = ${oneId}`)
          
                connMysql.end()
            }

            async function queryYes(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from users')
        
                let oneId = ''
                let oneProba = ''

                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id 
                        oneProba = e.proba
                    }
                })  
        
                if(oneProba==='no'){
                    bot.sendMessage(query.message.chat.id, `‚úÖ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ`,{
                        reply_markup:{ resize_keyboard: true,keyboard:keyboard.home}
                    })  
                    await connMysql.execute(`UPDATE users SET activ="yes" WHERE id = ${oneId}`)

                    setTimeout(function() {bot.sendMessage(query.message.chat.id, `–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω.\n \n –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª! `,{
                        reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
                    }) 

                    timeout()

                      }, 900*1000)
                      } else{
                        bot.sendMessage(query.message.chat.id, `‚ùå –í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥`,{
                            reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
                        })  
                    }

                connMysql.end()
            }
            queryYes() 

        break
        case 'no':
            bot.sendMessage(query.message.chat.id, `–ü—Ä–∏–≤–µ—Ç ${query.from.first_name}, —è –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`,{
                reply_markup:{ resize_keyboard: true,keyboard:keyboard.blockhome}
            })  
        break
        case 'uah':
            bot.sendMessage(query.message.chat.id, `üì© –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ –≤ –≥—Ä–∏–≤–Ω–∞—Ö, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É @glazaAdmin —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.`,{
                parse_mode: 'HTML'
            })  
        break
        case 'other':
            bot.sendMessage(query.message.chat.id, `üì© –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ, –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É @glazaAdmin —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.`,{
                parse_mode: 'HTML'
            })  
        break
        
        case 'cancel':
            async function cancel(){
                let inx = query.message.text.indexOf('–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:')
                let nomer = Math.floor(Number(query.message.text.substring(inx+14)))
        
                const connMysql = await mysql.createConnection(config) 
                const [rows] = await connMysql.execute('select * from users')
             
                let oneId = ''
           
                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id    
                    }
                })  
                await connMysql.execute(`DELETE FROM avto WHERE numberZakaz = ${nomer}`)
                await connMysql.execute(`UPDATE users SET status="–ê–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã" WHERE id = ${oneId}`)

                bot.sendMessage(query.message.chat.id,'‚úÖ –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω ‚úÖ')    
                bot.sendMessage('@zakazSudo', `‚ùåüëÅ‚Äçüó® –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª —Å –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: ‚Ññ${nomer}üëÅ‚Äçüó®‚ùå`)
    
                connMysql.end()
            }
            cancel()

        break
        case 'change':
            async function change(){
                let inx = query.message.text.indexOf('–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:')
                let nomer = Math.floor(Number(query.message.text.substring(inx+14)))
        
                const connMysql = await mysql.createConnection(config) 
                const [rows] = await connMysql.execute('select * from users')
        
                let oneId = ''
           
                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id
                    }
                })  
                await connMysql.execute(`UPDATE users SET status="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤" WHERE id = ${oneId}`)

                bot.sendMessage(query.message.chat.id, `üëÅ‚Äçüó® –í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ –æ–¥–∏–Ω –ø–æ—Å—Ç:`,{
                    parse_mode: 'HTML'
                })  
                bot.sendMessage('@zakazSudo', `‚úèÔ∏è–ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ: ‚Ññ${nomer}‚úèÔ∏è`)
               
    
                connMysql.end()
            }
            change()
  
        break
        case 'prodlit':
            async function prodlit(){
                let inx = query.message.text.indexOf('–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:')
                let nomer = Math.floor(Number(query.message.text.substring(inx+14)))
                
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from users')
        
                let oneBalance = ''
                let oneId = ''
           
                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id
                        oneBalance = e.balance
                    }
                })  
                await connMysql.execute(`UPDATE users SET status="–ü—Ä–æ–¥–ª–µ–≤–∞–Ω–∏–µ" WHERE id = ${oneId}`)      
                
                bot.sendMessage(query.message.chat.id, `‚ÑπÔ∏è –°—É—Ç–∫–∏ –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ = 20 ‚ÇΩ.\n\nüåÄ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–¥–ª–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –Ω–∞ <b>${Math.floor(oneBalance/20)} –¥–Ω–µ–π</b>\n\nüëâ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è:`,{
                    parse_mode: 'HTML'
                })  
                bot.sendMessage('@zakazSudo', `‚è≥–ü—Ä–æ–¥–ª–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ—Å–º–æ—Ç—Ä—ã –≤ –∑–∞–∫–∞–∑–µ: ‚Ññ${nomer}‚è≥`)
                connMysql.end()
            }
        
            prodlit()
 
        break
        case 'oplataKoment':
            let indx = query.message.text.indexOf('–°—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±–ª–µ–π):')
            let priceKom = Math.floor(Number(query.message.text.substring(indx+21)))

            async function oplataKoment(){
                const connMysql = await mysql.createConnection(config) 
        
                const [rows] = await connMysql.execute('select * from users')
                const [linkes] = await connMysql.execute('select * from coment')
                let oneLink=''

                let oneId = ''
                let oneBalance = ""
                linkes.map(e =>{
                    if(Number(e.idUser) === query.message.chat.id){
                        oneLink = e.link 
                   
                    }
                })  
                rows.map(e =>{
                    if(Number(e.id) === query.message.chat.id){
                        oneId = e.id 
                        oneBalance = Number(e.balance)
                    }
                })  
        
                await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${oneId}`)
                console.log(oneLink)
                if(oneBalance >= priceKom && priceKom <= 25 && oneLink != 'c'){

                   await connMysql.execute(`UPDATE users SET balance=${oneBalance-priceKom} WHERE id = ${oneId}`)
        
                   async function textComent(){
                    const connMysql = await mysql.createConnection(config) 
            
                    const [rows] = await connMysql.execute('select * from coment')
                    let countText = 0
                    rows.slice(-1).map(e => {
                        countText = e.text.split(',').length 
                    })
                    console.log(countText)
                     for (let i = 0; i < countText; i++) { 
                    
                        setTimeout( function () {
                     
                       const apiId = 13546883;
                       const apiHash = "40520938b7252fca82ff451b861ac6d0";
                   
                       let count = Math.floor(Math.random() * (43 - 0)) + 0
                       console.log(count)
                     
                       const stringSession = new StringSession(sessionAkk.akk()[count]); // fill this later with the value from session.save()
                       const clientApiComent = new TelegramClient( stringSession, apiId, apiHash,{
                        useWSS:false});
               
                       (async () => {
                       console.log("Loading interactive example...");
                       try{
                       await clientApiComent.start({
                           phoneNumber: async () => await input.text("Please enter your number: "),
                           password: async () => await input.text("Please enter your password: "),
                           phoneCode: async () =>
                           await input.text("Please enter the code you received: "),
                           onError: (err) => console.log(err),
                       });
                      
                       console.log("You should now be connected.");
                       console.log(clientApiComent.session.save());

                       
                       await  rows.slice(-1).map(e => {
                            
                           if(Number(e.idUser) === query.message.chat.id){  
                            try{ 
                                async function tes(){
                                    
                                 await clientApiComent.connect(); // This assumes you have already authenticated with .start()
                                    const result =  await clientApiComent.invoke(
                                        new Api.messages.SendMessage({
                                            peer: e.link,
                                            message: e.text.split(',')[i],
                                            replyToMsgId: e.post,
                                            randomId: generateRandomBigInt(1,100000),
                                            noWebpage: true,
                                            scheduleDate: 43,
                                        })
                                        ); 

                                    await clientApiComent.destroy()
                                }    

                                tes() 
                             }
                             catch(e){
                                console.log(e)
                                return false
                                throw e
                             }
                       }})

                       await clientApiComent.destroy()
                    }catch(e){
                        console.log(e)
                        return false
                        throw e
                       }
                      
                   })();
                   
                 
                   }, 60000 * i );
                 } 
                    await connMysql.end()
                }
                textComent()
               
                    bot.sendMessage(query.message.chat.id,`‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
                    bot.sendMessage('-1001769608495', `‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã –Ω–∞ —Å—É–º–º—É: ${priceKom}—Ä.`)
                } else if(oneBalance < priceKom){
                    bot.sendMessage(query.message.chat.id,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
                    connMysql.end()
                }else if(oneLink === 'c'){
                    bot.sendMessage(query.message.chat.id,`‚ùå–°—Å—ã–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ‚ùå\n\n–°—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –Ω—É–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å –û–¢–ö–†–´–¢–û–ì–û —á–∞—Ç–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è!\n–ü—Ä–∏–º–µ—Ä: https://t.me/chatOtkroi/1458 `)
                    connMysql.end()
                }else if(priceKom > 25){
                    bot.sendMessage(query.message.chat.id,`‚ùóÔ∏è –ú–∞–∫—Å–∏–º—É–º 100 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∞ 1 –ø–æ—Å—Ç\n\n<i>–í–µ—Ä–Ω–∏—Ç–µ—Å—å üîô –ù–∞–∑–∞–¥ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ</i>`,{parse_mode:'HTML'})

                connMysql.end()
            }
        }
            oplataKoment() 
break
case 'oplataReaction':
    let indxs = query.message.text.indexOf('–°—Ç–æ–∏–º–æ—Å—Ç—å (—Ä—É–±–ª–µ–π):')
    let priceKoms = Math.floor(Number(query.message.text.substring(indxs+21)))
    
    async function oplataReaction(){
        const connMysql = await mysql.createConnection(config) 
        
        function spliceIntoChunks(arr, chunkSize) {
            const res = [];
            while (arr.length > 0) {
                const chunk = arr.splice(0, chunkSize);
                res.push(chunk);
            }
            return res;
        }
          const [rows] = await connMysql.execute('select * from users')
           const [linkes] = await connMysql.execute('select * from reaction')
       

            let oneId = ''
            let oneBalance = ""

            let oneLink = ''
            let idChannel = ''
            let post = ''
            let masiv = []

            linkes.slice(-1).map(e =>{
                if(Number(e.idUser) === query.message.chat.id){
                    oneLink = e.link 
                    idChannel = Number(e.idChannel)
                    masiv.push('üëç',e.verh,'üëé',e.vniz,'‚ù§Ô∏è',e.likes,'üî•',e.fire,'ü•∞',e.lubov,'üòÅ',e.smex,'üò±',e.shok,'ü§¨',e.fuck,'üí©',e.govno)
                    post = Number(e.post)
                    time = e.time
                }
            })  
            masivCount = spliceIntoChunks(masiv, 2)
         
            rows.map(e =>{
                if(Number(e.id) === query.message.chat.id){
                    oneId = e.id 
                    oneBalance = Number(e.balance)
                }
            })  
            let totalcount = masivCount.map(i=>x+=i[1], x=0).reverse()[0]
            if(totalcount > 200){
                bot.sendMessage(query.message.chat.id,`‚ùóÔ∏è –ú–∞–∫—Å–∏–º—É–º 200 —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ 1 –ø–æ—Å—Ç\n\n<i>–í–µ—Ä–Ω–∏—Ç–µ—Å—å üîô –ù–∞–∑–∞–¥ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ</i>`,{parse_mode:'HTML'})
            }
      
            await connMysql.execute(`UPDATE users SET status="–ì–ª–∞–≤–Ω–∞—è" WHERE id = ${oneId}`)

              if(oneBalance >= priceKoms && priceKoms <= 20 ){
                await connMysql.execute(`UPDATE users SET balance=${oneBalance-priceKoms} WHERE id = ${oneId}`)
                bot.sendMessage(query.message.chat.id,`‚úÖ –†–µ–∞–∫—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã`)
                bot.sendMessage('-1001769608495', `‚úÖ –†–µ–∞–∫—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã –Ω–∞ —Å—É–º–º—É: ${priceKoms}—Ä.`)
           
               
                let counts = 0
            
    
                const DELAY = 10000; // 10000

                async function doSomething(word, count) {
                    while (count--) {
                        await new Promise((res, rej) => {
                            setTimeout(() => {
                                
                                const apiId = 18323356;
                                const apiHash = "2c184649bfb87e160c15d3e8373cff03";
                            
                               
                                console.log(counts)
                                const stringSession = new StringSession(sessionAkkReaction.akk()[(counts<200)?++counts:counts=200]);

                                 // fill this later with the value from session.save()
                               
                                 const clientApiReaction = new TelegramClient( stringSession, apiId, apiHash,{
                                    useWSS:false
                                });
                              
                                (async () => {
                                console.log("Loading interactive example...");
                                try{
                                    
                                   await clientApiReaction.start({
                                        phoneNumber: async () => await input.text("Please enter your number: "),
                                        password: async () => await input.text("Please enter your password: "),
                                        phoneCode: async () =>
                                       await input.text("Please enter the code you received: "),
                                     onError: (err) => console.log(err),
                                    });
                         
                              
                                console.log("You should now be connected.");
                                console.log(clientApiReaction.session.save());
                              
                            
                             
                               
                              const result = await clientApiReaction.invoke(new Api.messages.GetAllChats({
                                    exceptIds: [BigInt('-4156887774564')]
                                }));
        
                                let allIdChannelUser = []
                                let trueOrNot = []
        
                                await result.chats.map(e=>{
                                    allIdChannelUser.push(parseInt(e.id))
                                })
                              
                                
                                if(allIdChannelUser.includes(idChannel)){
                             
                                const result5 = await clientApiReaction.invoke(new Api.channels.GetMessages({
                                    channel: `-100${idChannel}`,
                                    id: [post]
                                }));
                                if(result5.messages[0].reactions!=null){
                                    let checkReaction = result5.messages[0].reactions.results
                                
                                    checkReaction.map(e=>{
                                        if(e.chosen===true){
                                            return trueOrNot.push(true)
                                        } else {
                                            return trueOrNot.push(false)
                                        }
                                    })
                                }
                               
                                }
                                if(!allIdChannelUser.includes(idChannel)){
                                    try{
                                      
                                    
                                        const result1 = await clientApiReaction.invoke(new Api.messages.ImportChatInvite({
                                            hash: `${oneLink}`
                                        })); 
                                        const result = await clientApiReaction.invoke(new Api.messages.SendReaction({
                                            big: true,
                                            peer: `-100${idChannel}`,
                                            msgId: post,
                                            reaction: word
                                        })); 
                                  
                                   
                                    }catch(e){
                                        console.log(e)
                                        return false
                                        throw e
                                    }
                                }else if(allIdChannelUser.includes(idChannel)&& !trueOrNot.includes(true)){
                                    try{
                                
                                    const result = await clientApiReaction.invoke(new Api.messages.SendReaction({
                                        big: true,
                                        peer: `-100${idChannel}`,
                                        msgId: post,
                                        reaction: word
                                    }));
                                
                                }catch(e){
                                    console.log(e)
                                    return false
                                    throw e
                                }
                                }else if(counts===200){
                                    console.log('–í—Å–µ –ª–∞–π–∫–Ω—É–ª–∏')
                                    count=0
                                }else if(trueOrNot.includes(true)){
                                    count++
                                }

                                await clientApiReaction.destroy()
                            }
                            catch(e){
                                console.log(e)
                              
                                return false 
                                throw e
                            }
                              
                             })()

                            res(word);
                            
                            }, DELAY);
                        })
                    }
                }
                
                !async function () {
                    for (const [word, count] of masivCount) {
                        await doSomething(word, count);
                    }
                }()
              

            }else if(oneBalance < priceKoms){
                bot.sendMessage(query.message.chat.id,`‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ`)
            }        
         
      connMysql.end()
   
}
    oplataReaction() 
break
    case 'delete':

        async function deletes(){
            let inx = query.message.text.indexOf('–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:')
            let nomer = Math.floor(Number(query.message.text.substring(inx+14)))
    
            const connMysql = await mysql.createConnection(config) 
    
            await connMysql.execute(`DELETE FROM views WHERE numberZakaz = ${nomer}`)

            bot.sendMessage(query.message.chat.id,'‚úîÔ∏è –ó–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω —Å –Ω–∞–∫—Ä—É—Ç–∫–∏')    

            connMysql.end()
        }
        deletes()

    break
    }
 
  
})

bot.onText(/\/start/, msg => {
   
    const text = `–ü—Ä–∏–≤–µ—Ç ${msg.from.first_name}, —è –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`

    bot.sendMessage(helper.getChatId(msg), text, {
        reply_markup:{
            resize_keyboard: true,
            keyboard:keyboard.blockhome
        },
 
    })
    let referalka = msg.text.substring(7)
  

    async function start(){
        const connMysql = await mysql.createConnection(config) 

        const [rows] = await connMysql.execute('select * from users')

        let allids = []

        for(let i=0; i < rows.length; i++){
            allids.push(Number(rows[i].id))
        }

        if(allids.includes(msg.chat.id)){
            bot.sendMessage(438265325,`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ —ñ—Å–Ω—É—î @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
            bot.sendMessage(695925439,`–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ —ñ—Å–Ω—É—î @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
           
           
        } else{
            
            if(msg.text.includes('695925439')){ 

            await connMysql.execute(`INSERT INTO users(id,brat) VALUES(${msg.chat.id},'695925439')`) 
            
            bot.sendMessage(438265325,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ –ë–†–ê–¢–ê @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
            bot.sendMessage(695925439,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ –ë–†–ê–¢–ê @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
            } else{
            
            if(referalka===''){
                await connMysql.execute( `INSERT INTO users(id) VALUES(${msg.chat.id})`) 
            
                bot.sendMessage(438265325,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
                bot.sendMessage(695925439,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ @${msg.from.username} –π–æ–≥–æ id ${msg.from.id}`)
            } else {
                await connMysql.execute( `INSERT INTO users(id,brat) VALUES(${msg.chat.id},${referalka})`) 

                bot.sendMessage(Number(referalka),`–£ –≤–∞—Å –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª –±–æ—Ç–∞ @${msg.from.username} –µ–≥–æ id ${msg.from.id}`)

                bot.sendMessage(438265325,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ @${msg.from.username} –π–æ–≥–æ id ${msg.from.id} –†–µ—Ñ–µ—Ä–∞–ª id${referalka}`)
                bot.sendMessage(695925439,`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–æ—Ç–∞ @${msg.from.username} –π–æ–≥–æ id ${msg.from.id} –†–µ—Ñ–µ—Ä–∞–ª id${referalka}`)
              }
            }
        } 
        connMysql.end()
    }

    start()

});


bot.onText(/\/restart/, msg => {
     async function resta(){
        await exec("pm2 restart index.js", (error, stdout, stderr) => {
            
            console.log(` ${stdout}`);
        });
       
     }
     resta()
    
})

